{
  "SerializedFilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/obj/Debug/net8.0/project.razor.json",
  "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/TBAnalisisFinanciero.Client.csproj",
  "Configuration": {
    "ConfigurationName": "Default",
    "LanguageVersion": "8.0",
    "Extensions": []
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "HashCode": -2083286496,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Helpers.PDFBaseLogic",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PDFBaseLogic"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Helpers.PDFBaseLogic",
          "Common.TypeNameIdentifier": "PDFBaseLogic",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Helpers",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1195439119,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Helpers.PDFBaseLogic",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Helpers.PDFBaseLogic"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Helpers.PDFBaseLogic",
          "Common.TypeNameIdentifier": "PDFBaseLogic",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Helpers",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 370125085,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.App",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "App"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.App",
          "Common.TypeNameIdentifier": "App",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 582369018,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.App",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.App"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.App",
          "Common.TypeNameIdentifier": "App",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -115634033,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.MostrarGraficas",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MostrarGraficas"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.MostrarGraficas",
          "Common.TypeNameIdentifier": "MostrarGraficas",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 781771110,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.MostrarGraficas",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Components.MostrarGraficas"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.MostrarGraficas",
          "Common.TypeNameIdentifier": "MostrarGraficas",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1837369531,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.PdfLoader",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PdfLoader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "FileIsSave",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FileIsSave",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileIsSaveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "FileIsSaveChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.PdfLoader",
          "Common.TypeNameIdentifier": "PdfLoader",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 552361403,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.PdfLoader",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Components.PdfLoader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "FileIsSave",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "FileIsSave",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileIsSaveChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "FileIsSaveChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.PdfLoader",
          "Common.TypeNameIdentifier": "PdfLoader",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1167658852,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.Shared.PageContent",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PageContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.Shared.PageContent",
          "Common.TypeNameIdentifier": "PageContent",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components.Shared",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 582242919,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.Shared.PageContent",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Components.Shared.PageContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.Shared.PageContent",
          "Common.TypeNameIdentifier": "PageContent",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components.Shared",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -393354119,
        "Kind": "Components.ChildContent",
        "Name": "TBAnalisisFinanciero.Client.Components.Shared.PageContent.ChildContent",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "PageContent"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.Shared.PageContent.ChildContent",
          "Common.TypeNameIdentifier": "PageContent",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components.Shared",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2099136348,
        "Kind": "Components.ChildContent",
        "Name": "TBAnalisisFinanciero.Client.Components.Shared.PageContent.ChildContent",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "TBAnalisisFinanciero.Client.Components.Shared.PageContent"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.Shared.PageContent.ChildContent",
          "Common.TypeNameIdentifier": "PageContent",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components.Shared",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -613518424,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.Shared.RedirectToLogin",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RedirectToLogin"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.Shared.RedirectToLogin",
          "Common.TypeNameIdentifier": "RedirectToLogin",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components.Shared",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -690028146,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.Shared.RedirectToLogin",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Components.Shared.RedirectToLogin"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.Shared.RedirectToLogin",
          "Common.TypeNameIdentifier": "RedirectToLogin",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components.Shared",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1500554952,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.Shared.LoginDisplay",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoginDisplay"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.Shared.LoginDisplay",
          "Common.TypeNameIdentifier": "LoginDisplay",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components.Shared",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1206056323,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Components.Shared.LoginDisplay",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Components.Shared.LoginDisplay"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.Shared.LoginDisplay",
          "Common.TypeNameIdentifier": "LoginDisplay",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components.Shared",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 511882312,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Layout.MainLayout",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Layout.MainLayout",
          "Common.TypeNameIdentifier": "MainLayout",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Layout",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 696013413,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Layout.MainLayout",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Layout.MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Layout.MainLayout",
          "Common.TypeNameIdentifier": "MainLayout",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Layout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1938840986,
        "Kind": "Components.ChildContent",
        "Name": "TBAnalisisFinanciero.Client.Layout.MainLayout.Body",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayout"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Layout.MainLayout.Body",
          "Common.TypeNameIdentifier": "MainLayout",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Layout",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1515598986,
        "Kind": "Components.ChildContent",
        "Name": "TBAnalisisFinanciero.Client.Layout.MainLayout.Body",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "TBAnalisisFinanciero.Client.Layout.MainLayout"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Layout.MainLayout.Body",
          "Common.TypeNameIdentifier": "MainLayout",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Layout",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 893653006,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Pages.Authentication.FetchData",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FetchData"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Pages.Authentication.FetchData",
          "Common.TypeNameIdentifier": "FetchData",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Pages.Authentication",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -986011720,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Pages.Authentication.FetchData",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Pages.Authentication.FetchData"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Pages.Authentication.FetchData",
          "Common.TypeNameIdentifier": "FetchData",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Pages.Authentication",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1999374725,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Pages.Authentication.Login",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Login"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Pages.Authentication.Login",
          "Common.TypeNameIdentifier": "Login",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Pages.Authentication",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1248947363,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Pages.Authentication.Login",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Pages.Authentication.Login"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Pages.Authentication.Login",
          "Common.TypeNameIdentifier": "Login",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Pages.Authentication",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1159073777,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Pages.Inicio",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Inicio"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Pages.Inicio",
          "Common.TypeNameIdentifier": "Inicio",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Pages",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1481574897,
        "Kind": "Components.Component",
        "Name": "TBAnalisisFinanciero.Client.Pages.Inicio",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Pages.Inicio"
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Pages.Inicio",
          "Common.TypeNameIdentifier": "Inicio",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Pages",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 192714470,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -980236320,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -828497619,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1480922149,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1926276072,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1762012790,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 785991745,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Policy",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Roles",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -804599097,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Policy",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Roles",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 249633487,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1422404987,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1169071542,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1701089999,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1787525820,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -451550436,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1570227997,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1273365303,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2066570134,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -12022976,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -847237620,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 940126531,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -877178198,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\n            <summary>\n            The value to be provided.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "IsFixed",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 915956408,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\n            <summary>\n            The value to be provided.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "IsFixed",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -669483383,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 151349600,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1397602101,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Parameters",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
          "Common.TypeNameIdentifier": "DynamicComponent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1689521661,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Parameters",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
          "Common.TypeNameIdentifier": "DynamicComponent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1775292980,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Layout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Common.TypeNameIdentifier": "LayoutView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1056763456,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Layout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Common.TypeNameIdentifier": "LayoutView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -691582182,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LayoutView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Common.TypeNameIdentifier": "LayoutView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -202617247,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Common.TypeNameIdentifier": "LayoutView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 51730141,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Common.TypeNameIdentifier": "RouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -2021019702,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Common.TypeNameIdentifier": "RouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -377056086,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AppAssembly",
              "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Common.TypeNameIdentifier": "Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -25631668,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AppAssembly",
              "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Common.TypeNameIdentifier": "Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1885058404,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Common.TypeNameIdentifier": "Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1120182523,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Common.TypeNameIdentifier": "Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1980938122,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Common.TypeNameIdentifier": "Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 284545412,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Common.TypeNameIdentifier": "Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1925831115,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Common.TypeNameIdentifier": "Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 842251637,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Common.TypeNameIdentifier": "Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -451589922,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Sections.SectionContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Sections.SectionContent\">\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> components with matching <see cref=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.SectionId\" />s.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SectionContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SectionName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.SectionName\">\n            <summary>\n            Gets or sets the <see cref=\"T:System.String\" /> ID that determines which <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> instance will render\n            the content of this instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SectionName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SectionId",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.SectionId\">\n            <summary>\n            Gets or sets the <see cref=\"T:System.Object\" /> ID that determines which <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> instance will render\n            the content of this instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SectionId",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered in corresponding <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> instances.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Sections.SectionContent",
          "Common.TypeNameIdentifier": "SectionContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Sections",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -750226724,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Sections.SectionContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Sections.SectionContent\">\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> components with matching <see cref=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.SectionId\" />s.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Sections.SectionContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SectionName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.SectionName\">\n            <summary>\n            Gets or sets the <see cref=\"T:System.String\" /> ID that determines which <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> instance will render\n            the content of this instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SectionName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SectionId",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.SectionId\">\n            <summary>\n            Gets or sets the <see cref=\"T:System.Object\" /> ID that determines which <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> instance will render\n            the content of this instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SectionId",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered in corresponding <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> instances.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Sections.SectionContent",
          "Common.TypeNameIdentifier": "SectionContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Sections",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 383404706,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Sections.SectionContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered in corresponding <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> instances.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "SectionContent"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Sections.SectionContent.ChildContent",
          "Common.TypeNameIdentifier": "SectionContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Sections",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1331861703,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Sections.SectionContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionContent.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered in corresponding <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\" /> instances.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Sections.SectionContent"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Sections.SectionContent.ChildContent",
          "Common.TypeNameIdentifier": "SectionContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Sections",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 814205471,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Sections.SectionOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\">\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionContent\" /> components with matching <see cref=\"P:Microsoft.AspNetCore.Components.Sections.SectionOutlet.SectionId\" />s.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SectionOutlet"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SectionName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionOutlet.SectionName\">\n            <summary>\n            Gets or sets the <see cref=\"T:System.String\" /> ID that determines which <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionContent\" /> instances will provide\n            content to this instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SectionName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SectionId",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionOutlet.SectionId\">\n            <summary>\n            Gets or sets the <see cref=\"T:System.Object\" /> ID that determines which <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionContent\" /> instances will provide\n            content to this instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SectionId",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Sections.SectionOutlet",
          "Common.TypeNameIdentifier": "SectionOutlet",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Sections",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 775211402,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Sections.SectionOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Sections.SectionOutlet\">\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionContent\" /> components with matching <see cref=\"P:Microsoft.AspNetCore.Components.Sections.SectionOutlet.SectionId\" />s.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Sections.SectionOutlet"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SectionName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionOutlet.SectionName\">\n            <summary>\n            Gets or sets the <see cref=\"T:System.String\" /> ID that determines which <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionContent\" /> instances will provide\n            content to this instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SectionName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SectionId",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Sections.SectionOutlet.SectionId\">\n            <summary>\n            Gets or sets the <see cref=\"T:System.Object\" /> ID that determines which <see cref=\"T:Microsoft.AspNetCore.Components.Sections.SectionContent\" /> instances will provide\n            content to this instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SectionId",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Sections.SectionOutlet",
          "Common.TypeNameIdentifier": "SectionOutlet",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Sections",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1896519952,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Common.TypeNameIdentifier": "DataAnnotationsValidator",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 106516531,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Common.TypeNameIdentifier": "DataAnnotationsValidator",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -789359891,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.AntiforgeryToken",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.AntiforgeryToken\">\n            <summary>\n            Component that renders an antiforgery token as a hidden field.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AntiforgeryToken"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.AntiforgeryToken",
          "Common.TypeNameIdentifier": "AntiforgeryToken",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1647507226,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.AntiforgeryToken",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.AntiforgeryToken\">\n            <summary>\n            Component that renders an antiforgery token as a hidden field.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.AntiforgeryToken"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.AntiforgeryToken",
          "Common.TypeNameIdentifier": "AntiforgeryToken",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 685793715,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "EditContext",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhance",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Enhance\">\n             <summary>\n             If enabled, form submission is performed without fully reloading the page. This is\n             equivalent to adding <code>data-enhance</code> to the form.\n            \n             This flag is only relevant in server-side rendering (SSR) scenarios. For interactive\n             rendering, the flag has no effect since there is no full-page reload on submit anyway.\n             </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Enhance",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.FormName\">\n            <summary>\n            Gets or sets the form handler name. This is required for posting it to a server-side endpoint.\n            It is not used during interactive rendering.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "FormName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Common.TypeNameIdentifier": "EditForm",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1675188221,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "EditContext",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Enhance",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Enhance\">\n             <summary>\n             If enabled, form submission is performed without fully reloading the page. This is\n             equivalent to adding <code>data-enhance</code> to the form.\n            \n             This flag is only relevant in server-side rendering (SSR) scenarios. For interactive\n             rendering, the flag has no effect since there is no full-page reload on submit anyway.\n             </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Enhance",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.FormName\">\n            <summary>\n            Gets or sets the form handler name. This is required for posting it to a server-side endpoint.\n            It is not used during interactive rendering.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "FormName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Common.TypeNameIdentifier": "EditForm",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -20082335,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Common.TypeNameIdentifier": "EditForm",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 848487368,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Common.TypeNameIdentifier": "EditForm",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 899112171,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNameIdentifier": "InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1274304291,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNameIdentifier": "InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1257801071,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\n            <summary>\n            An input component for editing date values.\n            The supported types for the date value are:\n            <list type=\"bullet\">\n            <item><see cref=\"T:System.DateTime\" /></item>\n            <item><see cref=\"T:System.DateTimeOffset\" /></item>\n            <item><see cref=\"T:System.DateOnly\" /></item>\n            <item><see cref=\"T:System.TimeOnly\" /></item>\n            </list>\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNameIdentifier": "InputDate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 520782390,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\n            <summary>\n            An input component for editing date values.\n            The supported types for the date value are:\n            <list type=\"bullet\">\n            <item><see cref=\"T:System.DateTime\" /></item>\n            <item><see cref=\"T:System.DateTimeOffset\" /></item>\n            <item><see cref=\"T:System.DateOnly\" /></item>\n            <item><see cref=\"T:System.TimeOnly\" /></item>\n            </list>\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNameIdentifier": "InputDate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1006937338,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Common.TypeNameIdentifier": "InputFile",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -572902601,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Common.TypeNameIdentifier": "InputFile",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 275596875,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNameIdentifier": "InputNumber",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1006470030,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNameIdentifier": "InputNumber",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 801035835,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Common.TypeNameIdentifier": "InputRadio",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1241209029,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Common.TypeNameIdentifier": "InputRadio",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1500940285,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -350073258,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1040008941,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputRadioGroup"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2103254552,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1210589763,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\n            <summary>\n            A dropdown selection component.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNameIdentifier": "InputSelect",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 477296507,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\n            <summary>\n            A dropdown selection component.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNameIdentifier": "InputSelect",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 361529480,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Common.TypeNameIdentifier": "InputSelect",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 102081338,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Common.TypeNameIdentifier": "InputSelect",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1055098487,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNameIdentifier": "InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 2061111666,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNameIdentifier": "InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -290907023,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNameIdentifier": "InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -360972227,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNameIdentifier": "InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1750283750,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.FormMappingScope",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.FormMappingScope\">\n            <summary>\n            Defines the mapping scope for data received from form posts.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FormMappingScope"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.FormMappingScope.Name\">\n            <summary>\n            The mapping scope name.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.FormMappingContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.FormMappingScope.ChildContent\">\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.FormMappingScope\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.FormMappingContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.FormMappingScope",
          "Common.TypeNameIdentifier": "FormMappingScope",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1153165578,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.FormMappingScope",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.FormMappingScope\">\n            <summary>\n            Defines the mapping scope for data received from form posts.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.FormMappingScope"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "IsEditorRequired": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.FormMappingScope.Name\">\n            <summary>\n            The mapping scope name.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.FormMappingContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.FormMappingScope.ChildContent\">\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.FormMappingScope\" />.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.FormMappingContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.FormMappingScope",
          "Common.TypeNameIdentifier": "FormMappingScope",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -926736012,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.FormMappingScope.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.FormMappingScope.ChildContent\">\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.FormMappingScope\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "FormMappingScope"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.FormMappingScope.ChildContent",
          "Common.TypeNameIdentifier": "FormMappingScope",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1509723334,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.FormMappingScope.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.FormMappingScope.ChildContent\">\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.FormMappingScope\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.FormMappingScope"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.FormMappingScope.ChildContent",
          "Common.TypeNameIdentifier": "FormMappingScope",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 614382748,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "For",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Common.TypeNameIdentifier": "ValidationMessage",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1393918767,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "For",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Common.TypeNameIdentifier": "ValidationMessage",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 22669044,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Common.TypeNameIdentifier": "ValidationSummary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1306234945,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Common.TypeNameIdentifier": "ValidationSummary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 572349157,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Selector",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
          "Common.TypeNameIdentifier": "FocusOnNavigate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1803848855,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Selector",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
          "Common.TypeNameIdentifier": "FocusOnNavigate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -459020085,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavigationLock",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavigationLock\">\n            <summary>\n            A component that can be used to intercept navigation events. \n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavigationLock"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnBeforeInternalNavigation",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.LocationChangingContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.OnBeforeInternalNavigation\">\n            <summary>\n            Gets or sets a callback to be invoked when an internal navigation event occurs.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnBeforeInternalNavigation",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.LocationChangingContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ConfirmExternalNavigation",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.ConfirmExternalNavigation\">\n            <summary>\n            Gets or sets whether a browser dialog should prompt the user to either confirm or cancel\n            external navigations.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ConfirmExternalNavigation",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavigationLock",
          "Common.TypeNameIdentifier": "NavigationLock",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1516126050,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavigationLock",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavigationLock\">\n            <summary>\n            A component that can be used to intercept navigation events. \n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavigationLock"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnBeforeInternalNavigation",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.LocationChangingContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.OnBeforeInternalNavigation\">\n            <summary>\n            Gets or sets a callback to be invoked when an internal navigation event occurs.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnBeforeInternalNavigation",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.LocationChangingContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ConfirmExternalNavigation",
            "TypeName": "System.Boolean",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavigationLock.ConfirmExternalNavigation\">\n            <summary>\n            Gets or sets whether a browser dialog should prompt the user to either confirm or cancel\n            external navigations.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ConfirmExternalNavigation",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavigationLock",
          "Common.TypeNameIdentifier": "NavigationLock",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1523609618,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ActiveClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Match",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Common.TypeNameIdentifier": "NavLink",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -2053963187,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ActiveClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Match",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Common.TypeNameIdentifier": "NavLink",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -644151661,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Common.TypeNameIdentifier": "NavLink",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -342256841,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Common.TypeNameIdentifier": "NavLink",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 404715186,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
          "Common.TypeNameIdentifier": "HeadContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 695768555,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
          "Common.TypeNameIdentifier": "HeadContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -803305761,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "HeadContent"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
          "Common.TypeNameIdentifier": "HeadContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 466902067,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.HeadContent"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
          "Common.TypeNameIdentifier": "HeadContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1499694620,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadOutlet"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
          "Common.TypeNameIdentifier": "HeadOutlet",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1819738623,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.HeadOutlet"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
          "Common.TypeNameIdentifier": "HeadOutlet",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1704040119,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PageTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
          "Common.TypeNameIdentifier": "PageTitle",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 436161517,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.PageTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
          "Common.TypeNameIdentifier": "PageTitle",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1627565143,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "PageTitle"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
          "Common.TypeNameIdentifier": "PageTitle",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1469920501,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.PageTitle"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
          "Common.TypeNameIdentifier": "PageTitle",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1347218893,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ErrorContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumErrorCount",
            "TypeName": "System.Int32",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "MaximumErrorCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1952739307,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ErrorContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumErrorCount",
            "TypeName": "System.Int32",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "MaximumErrorCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -649514851,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ErrorBoundary"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -327547339,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -657441666,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorContent",
            "ParentTag": "ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ErrorContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -95779195,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ErrorContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 463996269,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Common.PropertyName": "ItemContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.EmptyContent\">\n            <summary>\n            Gets or sets the content to show when <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\" /> is empty\n            or when the <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderResult`1.TotalItemCount\" /> is zero.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "EmptyContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ItemSize",
              "Common.GloballyQualifiedTypeName": "global::System.Single"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
              "Common.PropertyName": "ItemsProvider",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True",
              "Components.IsDelegateAwaitableResult": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.ICollection<TItem>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OverscanCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SpacerElement",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\">\n             <summary>\n             Gets or sets the tag name of the HTML element that will be used as the virtualization spacer.\n             One such element will be rendered before the visible items, and one more after them, using\n             an explicit \"height\" style to control the scroll range.\n            \n             The default value is \"div\". If you are placing the <see cref=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\" /> instance inside\n             an element that requires a specific child tag name, consider setting that here. For example when\n             rendering inside a \"tbody\", consider setting <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\" /> to the value \"tr\".\n             </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SpacerElement",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1945338315,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Common.PropertyName": "ItemContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.EmptyContent\">\n            <summary>\n            Gets or sets the content to show when <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\" /> is empty\n            or when the <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderResult`1.TotalItemCount\" /> is zero.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "EmptyContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ItemSize",
              "Common.GloballyQualifiedTypeName": "global::System.Single"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
              "Common.PropertyName": "ItemsProvider",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True",
              "Components.IsDelegateAwaitableResult": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.ICollection<TItem>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OverscanCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SpacerElement",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\">\n             <summary>\n             Gets or sets the tag name of the HTML element that will be used as the virtualization spacer.\n             One such element will be rendered before the visible items, and one more after them, using\n             an explicit \"height\" style to control the scroll range.\n            \n             The default value is \"div\". If you are placing the <see cref=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\" /> instance inside\n             an element that requires a specific child tag name, consider setting that here. For example when\n             rendering inside a \"tbody\", consider setting <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.SpacerElement\" /> to the value \"tr\".\n             </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "SpacerElement",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -653258239,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1171213892,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -771675888,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 186915069,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1323352428,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 850426185,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1687898112,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.EmptyContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.EmptyContent\">\n            <summary>\n            Gets or sets the content to show when <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\" /> is empty\n            or when the <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderResult`1.TotalItemCount\" /> is zero.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EmptyContent",
            "ParentTag": "Virtualize"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.EmptyContent",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -627253935,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.EmptyContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.EmptyContent\">\n            <summary>\n            Gets or sets the content to show when <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\" /> is empty\n            or when the <see cref=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderResult`1.TotalItemCount\" /> is zero.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EmptyContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.EmptyContent",
          "Common.TypeNameIdentifier": "Virtualize",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 301070803,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView\">\n            <summary>\n            An <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1\" /> that uses <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState\" /> as the\n            state to be persisted across authentication operations.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Action\">\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions\" /> action the component needs to handle.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Action",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthenticationState",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.AuthenticationState\">\n            <summary>\n            Gets or sets the <typeparamref name=\"TAuthenticationState\" /> instance to be preserved during the authentication operation.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AuthenticationState",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LoggingIn",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Registering",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Registering\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Registering",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserProfile",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.UserProfile\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "UserProfile",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "CompletingLoggingIn",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogInFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogInFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogInFailed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOut",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "CompletingLogOut",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOutFailed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutSucceeded\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOutSucceeded",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogInSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.OnLogInSucceeded\">\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log in operation succeeds.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnLogInSucceeded",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.OnLogOutSucceeded\">\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log out operation succeeds.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnLogOutSucceeded",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplicationPaths",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.ApplicationPaths\">\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions\" /> with the paths to different authentication pages.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ApplicationPaths",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -327161347,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView\">\n            <summary>\n            An <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1\" /> that uses <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState\" /> as the\n            state to be persisted across authentication operations.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Action\">\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions\" /> action the component needs to handle.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Action",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthenticationState",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.AuthenticationState\">\n            <summary>\n            Gets or sets the <typeparamref name=\"TAuthenticationState\" /> instance to be preserved during the authentication operation.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AuthenticationState",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LoggingIn",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Registering",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Registering\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Registering",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserProfile",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.UserProfile\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "UserProfile",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "CompletingLoggingIn",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogInFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogInFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogInFailed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOut",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "CompletingLogOut",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOutFailed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutSucceeded\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOutSucceeded",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogInSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.OnLogInSucceeded\">\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log in operation succeeds.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnLogInSucceeded",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.OnLogOutSucceeded\">\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log out operation succeeds.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "OnLogOutSucceeded",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplicationPaths",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.ApplicationPaths\">\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions\" /> with the paths to different authentication pages.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ApplicationPaths",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1240707090,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoggingIn",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LoggingIn",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -935610787,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoggingIn",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LoggingIn",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 493086323,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.Registering",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Registering\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Registering",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.Registering",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 884305662,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.Registering",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Registering\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Registering",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.Registering",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1005775857,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.UserProfile",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.UserProfile\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "UserProfile",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.UserProfile",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1132780247,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.UserProfile",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.UserProfile\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "UserProfile",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.UserProfile",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1892312421,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLoggingIn",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLoggingIn",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1676758963,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLoggingIn",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLoggingIn",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1681749673,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogInFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogInFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogInFailed",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogInFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogInFailed",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1132687774,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogInFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogInFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogInFailed",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogInFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogInFailed",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1263814323,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOut",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOut",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1559252333,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOut",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOut",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2013291609,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLogOut",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLogOut",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 913260325,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLogOut",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLogOut",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -530976219,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutFailed",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogOutFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutFailed",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1132769024,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutFailed",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogOutFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutFailed",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 293441865,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutSucceeded",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutSucceeded\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutSucceeded",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutSucceeded",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1838342261,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutSucceeded",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutSucceeded\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutSucceeded",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutSucceeded",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2100137455,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1\">\n            <summary>\n            A component that handles remote authentication operations in an application.\n            </summary>\n            <typeparam name=\"TAuthenticationState\">The user state type persisted while the operation is in progress. It must be serializable.</typeparam>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TAuthenticationState",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TAuthenticationState for the Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState> component.",
            "Metadata": {
              "Common.PropertyName": "TAuthenticationState",
              "Component.TypeParameterConstraints": "where TAuthenticationState : global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Action\">\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions\" /> action the component needs to handle.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Action",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthenticationState",
            "TypeName": "TAuthenticationState",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.AuthenticationState\">\n            <summary>\n            Gets or sets the <typeparamref name=\"TAuthenticationState\" /> instance to be preserved during the authentication operation.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AuthenticationState",
              "Common.GloballyQualifiedTypeName": "TAuthenticationState",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LoggingIn",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Registering",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Registering\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Registering",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserProfile",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.UserProfile\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "UserProfile",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "CompletingLoggingIn",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogInFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogInFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogInFailed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOut",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "CompletingLogOut",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOutFailed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutSucceeded\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOutSucceeded",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogInSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.OnLogInSucceeded\">\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log in operation succeeds.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
              "Common.PropertyName": "OnLogInSucceeded",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.OnLogOutSucceeded\">\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log out operation succeeds.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
              "Common.PropertyName": "OnLogOutSucceeded",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplicationPaths",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.ApplicationPaths\">\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions\" /> with the paths to different authentication pages.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ApplicationPaths",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.GenericTyped": "True",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1684444263,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1\">\n            <summary>\n            A component that handles remote authentication operations in an application.\n            </summary>\n            <typeparam name=\"TAuthenticationState\">The user state type persisted while the operation is in progress. It must be serializable.</typeparam>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TAuthenticationState",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TAuthenticationState for the Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState> component.",
            "Metadata": {
              "Common.PropertyName": "TAuthenticationState",
              "Component.TypeParameterConstraints": "where TAuthenticationState : global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Action\">\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions\" /> action the component needs to handle.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Action",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthenticationState",
            "TypeName": "TAuthenticationState",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.AuthenticationState\">\n            <summary>\n            Gets or sets the <typeparamref name=\"TAuthenticationState\" /> instance to be preserved during the authentication operation.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "AuthenticationState",
              "Common.GloballyQualifiedTypeName": "TAuthenticationState",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LoggingIn",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Registering",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Registering\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "Registering",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserProfile",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.UserProfile\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "UserProfile",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "CompletingLoggingIn",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogInFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogInFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogInFailed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOut",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "CompletingLogOut",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOutFailed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.String>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutSucceeded\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "LogOutSucceeded",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogInSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.OnLogInSucceeded\">\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log in operation succeeds.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
              "Common.PropertyName": "OnLogInSucceeded",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.OnLogOutSucceeded\">\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log out operation succeeds.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
              "Common.PropertyName": "OnLogOutSucceeded",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplicationPaths",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions",
            "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.ApplicationPaths\">\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions\" /> with the paths to different authentication pages.\n            </summary>\n        </member>",
            "Metadata": {
              "Common.PropertyName": "ApplicationPaths",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1015502837,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoggingIn",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LoggingIn",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1906929875,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoggingIn",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LoggingIn",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1056751076,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.Registering",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Registering\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Registering",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.Registering",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1076099741,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.Registering",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.Registering\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Registering",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.Registering",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1490744053,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.UserProfile",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.UserProfile\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "UserProfile",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.UserProfile",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 424913350,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.UserProfile",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.UserProfile\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "UserProfile",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.UserProfile",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -411470739,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLoggingIn",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLoggingIn",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2047758277,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLoggingIn\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLoggingIn",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLoggingIn",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 953724558,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogInFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogInFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogInFailed",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogInFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogInFailed",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 393319728,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogInFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogInFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogInFailed",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogInFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogInFailed",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 323653691,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOut",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOut",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1021263746,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOut",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOut",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2089395475,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLogOut",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLogOut",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -758559795,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.CompletingLogOut\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLogOut",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLogOut",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 905606251,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutFailed",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogOutFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutFailed",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 894485469,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutFailed\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutFailed",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogOutFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutFailed",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1087719605,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutSucceeded",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutSucceeded\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutSucceeded",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutSucceeded",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1097102412,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutSucceeded",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "<member name=\"P:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1.LogOutSucceeded\">\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        </member>",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutSucceeded",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutSucceeded",
          "Common.TypeNameIdentifier": "RemoteAuthenticatorViewCore",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1328058612,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.CEFooter",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEFooter"
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.CEFooter",
          "Common.TypeNameIdentifier": "CEFooter",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 237645902,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.CEFooter",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.CEFooter"
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.CEFooter",
          "Common.TypeNameIdentifier": "CEFooter",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -764753594,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.ButtonHide",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ButtonHide"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.ButtonHide",
          "Common.TypeNameIdentifier": "ButtonHide",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1781306442,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.ButtonHide",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.ButtonHide"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.ButtonHide",
          "Common.TypeNameIdentifier": "ButtonHide",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1842446463,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Lateral.MenuItem",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MenuItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "menuItem",
            "TypeName": "CEBlazorBulma.Interfaces.IArticleItem",
            "Metadata": {
              "Common.PropertyName": "menuItem",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Interfaces.IArticleItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SectionHref",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SectionHref",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Lateral.MenuItem",
          "Common.TypeNameIdentifier": "MenuItem",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Lateral",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1570339447,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Lateral.MenuItem",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Lateral.MenuItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "menuItem",
            "TypeName": "CEBlazorBulma.Interfaces.IArticleItem",
            "Metadata": {
              "Common.PropertyName": "menuItem",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Interfaces.IArticleItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SectionHref",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SectionHref",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Lateral.MenuItem",
          "Common.TypeNameIdentifier": "MenuItem",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Lateral",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 304091890,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Lateral.MenuSection",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MenuSection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "menuSection",
            "TypeName": "CEBlazorBulma.Interfaces.IArticleSection",
            "Metadata": {
              "Common.PropertyName": "menuSection",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Interfaces.IArticleSection"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Lateral.MenuSection",
          "Common.TypeNameIdentifier": "MenuSection",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Lateral",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1179253845,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Lateral.MenuSection",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Lateral.MenuSection"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "menuSection",
            "TypeName": "CEBlazorBulma.Interfaces.IArticleSection",
            "Metadata": {
              "Common.PropertyName": "menuSection",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Interfaces.IArticleSection"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Lateral.MenuSection",
          "Common.TypeNameIdentifier": "MenuSection",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Lateral",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 263055926,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.SideBar",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SideBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "MenuBarContent",
            "TypeName": "CEBlazorBulma.Interfaces.IArticlesDataModel",
            "Metadata": {
              "Common.PropertyName": "MenuBarContent",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Interfaces.IArticlesDataModel"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.SideBar",
          "Common.TypeNameIdentifier": "SideBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 291333859,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.SideBar",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.SideBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "MenuBarContent",
            "TypeName": "CEBlazorBulma.Interfaces.IArticlesDataModel",
            "Metadata": {
              "Common.PropertyName": "MenuBarContent",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Interfaces.IArticlesDataModel"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.SideBar",
          "Common.TypeNameIdentifier": "SideBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -456218479,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.CycleButton",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CycleButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Theme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.CycleButton",
          "Common.TypeNameIdentifier": "CycleButton",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 2091695218,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.CycleButton",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Navegador.CycleButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Theme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnClick",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.CycleButton",
          "Common.TypeNameIdentifier": "CycleButton",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1434907888,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.LogoItem",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogoItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SVG",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SVG",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.LogoItem",
          "Common.TypeNameIdentifier": "LogoItem",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -851788757,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.LogoItem",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Navegador.LogoItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "SVG",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SVG",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.LogoItem",
          "Common.TypeNameIdentifier": "LogoItem",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 820701433,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.MainBar",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ShowMenuClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ShowMenuClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowMenuClassChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "ShowMenuClassChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icons",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "Icons",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SVGs",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "SVGs",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultTheme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DefaultTheme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.MainBar",
          "Common.TypeNameIdentifier": "MainBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1811873929,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.MainBar",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Navegador.MainBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ShowMenuClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ShowMenuClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowMenuClassChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "ShowMenuClassChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icons",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "Icons",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SVGs",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "SVGs",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultTheme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DefaultTheme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.MainBar",
          "Common.TypeNameIdentifier": "MainBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 595620070,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.MainBarIcons",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainBarIcons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icons",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "Icons",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SVGs",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "SVGs",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.MainBarIcons",
          "Common.TypeNameIdentifier": "MainBarIcons",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -848878207,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.MainBarIcons",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Navegador.MainBarIcons"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icons",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "Icons",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SVGs",
            "TypeName": "CEBlazorBulma.Models.Item[]",
            "Metadata": {
              "Common.PropertyName": "SVGs",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.Item[]"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.MainBarIcons",
          "Common.TypeNameIdentifier": "MainBarIcons",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 646284013,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.MainBarItem",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainBarItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "IsIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsIcon",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSVG",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsSVG",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Theme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClassName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ClassName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShortName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ShortName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SVGPath",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SVGPath",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Href",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.MainBarItem",
          "Common.TypeNameIdentifier": "MainBarItem",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1528639000,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.MainBarItem",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Navegador.MainBarItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "IsIcon",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsIcon",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsSVG",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "IsSVG",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Theme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClassName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ClassName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShortName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ShortName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SVGPath",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SVGPath",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Href",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Href",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.MainBarItem",
          "Common.TypeNameIdentifier": "MainBarItem",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -310756360,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.ThemeMenu",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ThemeMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Theme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MenuShow",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "MenuShow",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SetTheme",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SetTheme",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.ThemeMenu",
          "Common.TypeNameIdentifier": "ThemeMenu",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1256309963,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.ThemeMenu",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Navegador.ThemeMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Theme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MenuShow",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "MenuShow",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SetTheme",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SetTheme",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.ThemeMenu",
          "Common.TypeNameIdentifier": "ThemeMenu",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1485751007,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.ThemesBar",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ThemesBar"
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.ThemesBar",
          "Common.TypeNameIdentifier": "ThemesBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -1139905386,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.Navegador.ThemesBar",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Navegador.ThemesBar"
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.ThemesBar",
          "Common.TypeNameIdentifier": "ThemesBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -590331661,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.NavBar",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NavBarContent",
            "TypeName": "CEBlazorBulma.Models.NavBarModel",
            "Metadata": {
              "Common.PropertyName": "NavBarContent",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.NavBarModel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "WithThemeBar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "WithThemeBar",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoginArea",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LoginArea",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.NavBar",
          "Common.TypeNameIdentifier": "NavBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": -969312980,
        "Kind": "Components.Component",
        "Name": "CEBlazorBulma.Components.NavBar",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.NavBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NavBarContent",
            "TypeName": "CEBlazorBulma.Models.NavBarModel",
            "Metadata": {
              "Common.PropertyName": "NavBarContent",
              "Common.GloballyQualifiedTypeName": "global::CEBlazorBulma.Models.NavBarModel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "WithThemeBar",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "WithThemeBar",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoginArea",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "LoginArea",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.NavBar",
          "Common.TypeNameIdentifier": "NavBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.IComponent"
        }
      },
      {
        "HashCode": 1293076731,
        "Kind": "Components.ChildContent",
        "Name": "CEBlazorBulma.Components.NavBar.LoginArea",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoginArea",
            "ParentTag": "NavBar"
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.NavBar.LoginArea",
          "Common.TypeNameIdentifier": "NavBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1193557070,
        "Kind": "Components.ChildContent",
        "Name": "CEBlazorBulma.Components.NavBar.LoginArea",
        "AssemblyName": "CEBlazorBulma",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoginArea",
            "ParentTag": "CEBlazorBulma.Components.NavBar"
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.NavBar.LoginArea",
          "Common.TypeNameIdentifier": "NavBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1826656791,
        "Kind": "Components.EventHandler",
        "Name": "onfocus",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocus"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1310307556,
        "Kind": "Components.EventHandler",
        "Name": "onblur",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onblur",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onblur"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -887925113,
        "Kind": "Components.EventHandler",
        "Name": "onfocusin",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusin",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusin"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 862581154,
        "Kind": "Components.EventHandler",
        "Name": "onfocusout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -441110348,
        "Kind": "Components.EventHandler",
        "Name": "onmouseover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1159786004,
        "Kind": "Components.EventHandler",
        "Name": "onmouseout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -990241543,
        "Kind": "Components.EventHandler",
        "Name": "onmouseleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 881502068,
        "Kind": "Components.EventHandler",
        "Name": "onmouseenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1793636407,
        "Kind": "Components.EventHandler",
        "Name": "onmousemove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousemove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousemove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -455021422,
        "Kind": "Components.EventHandler",
        "Name": "onmousedown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousedown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousedown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -210426913,
        "Kind": "Components.EventHandler",
        "Name": "onmouseup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 3411974,
        "Kind": "Components.EventHandler",
        "Name": "onclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1661132539,
        "Kind": "Components.EventHandler",
        "Name": "ondblclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondblclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondblclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2112046312,
        "Kind": "Components.EventHandler",
        "Name": "onwheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 986007646,
        "Kind": "Components.EventHandler",
        "Name": "onmousewheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousewheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousewheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1741449800,
        "Kind": "Components.EventHandler",
        "Name": "oncontextmenu",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncontextmenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncontextmenu"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1002476271,
        "Kind": "Components.EventHandler",
        "Name": "ondrag",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrag"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 126267794,
        "Kind": "Components.EventHandler",
        "Name": "ondragend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 957026360,
        "Kind": "Components.EventHandler",
        "Name": "ondragenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1490847739,
        "Kind": "Components.EventHandler",
        "Name": "ondragleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 559500543,
        "Kind": "Components.EventHandler",
        "Name": "ondragover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1547871555,
        "Kind": "Components.EventHandler",
        "Name": "ondragstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1964177862,
        "Kind": "Components.EventHandler",
        "Name": "ondrop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -582388944,
        "Kind": "Components.EventHandler",
        "Name": "onkeydown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeydown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeydown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 169638483,
        "Kind": "Components.EventHandler",
        "Name": "onkeyup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeyup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeyup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1411391365,
        "Kind": "Components.EventHandler",
        "Name": "onkeypress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeypress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeypress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1803168008,
        "Kind": "Components.EventHandler",
        "Name": "onchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -503684962,
        "Kind": "Components.EventHandler",
        "Name": "oninput",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninput"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 654410746,
        "Kind": "Components.EventHandler",
        "Name": "oninvalid",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninvalid",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninvalid"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1823660684,
        "Kind": "Components.EventHandler",
        "Name": "onreset",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreset"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 311291202,
        "Kind": "Components.EventHandler",
        "Name": "onselect",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselect"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1554989958,
        "Kind": "Components.EventHandler",
        "Name": "onselectstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1668401993,
        "Kind": "Components.EventHandler",
        "Name": "onselectionchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectionchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectionchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 43380165,
        "Kind": "Components.EventHandler",
        "Name": "onsubmit",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsubmit"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -120688723,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 836754967,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 367142854,
        "Kind": "Components.EventHandler",
        "Name": "onbeforepaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforepaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforepaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 491576265,
        "Kind": "Components.EventHandler",
        "Name": "oncopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2112363170,
        "Kind": "Components.EventHandler",
        "Name": "oncut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1289365380,
        "Kind": "Components.EventHandler",
        "Name": "onpaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 928912838,
        "Kind": "Components.EventHandler",
        "Name": "ontouchcancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchcancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchcancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1042312757,
        "Kind": "Components.EventHandler",
        "Name": "ontouchend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1484873349,
        "Kind": "Components.EventHandler",
        "Name": "ontouchmove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchmove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchmove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -481488073,
        "Kind": "Components.EventHandler",
        "Name": "ontouchstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1741691730,
        "Kind": "Components.EventHandler",
        "Name": "ontouchenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 478732953,
        "Kind": "Components.EventHandler",
        "Name": "ontouchleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 117097678,
        "Kind": "Components.EventHandler",
        "Name": "ongotpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ongotpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ongotpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1710758948,
        "Kind": "Components.EventHandler",
        "Name": "onlostpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onlostpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onlostpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 187386193,
        "Kind": "Components.EventHandler",
        "Name": "onpointercancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointercancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointercancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -201604951,
        "Kind": "Components.EventHandler",
        "Name": "onpointerdown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerdown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerdown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1294265381,
        "Kind": "Components.EventHandler",
        "Name": "onpointerenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2146763330,
        "Kind": "Components.EventHandler",
        "Name": "onpointerleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -767006824,
        "Kind": "Components.EventHandler",
        "Name": "onpointermove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointermove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointermove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1508545901,
        "Kind": "Components.EventHandler",
        "Name": "onpointerout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1279687355,
        "Kind": "Components.EventHandler",
        "Name": "onpointerover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1303167728,
        "Kind": "Components.EventHandler",
        "Name": "onpointerup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1560936636,
        "Kind": "Components.EventHandler",
        "Name": "oncanplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 533140870,
        "Kind": "Components.EventHandler",
        "Name": "oncanplaythrough",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplaythrough",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplaythrough"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 671352984,
        "Kind": "Components.EventHandler",
        "Name": "oncuechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncuechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncuechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1519332773,
        "Kind": "Components.EventHandler",
        "Name": "ondurationchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondurationchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondurationchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1106636449,
        "Kind": "Components.EventHandler",
        "Name": "onemptied",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onemptied",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onemptied"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 782617241,
        "Kind": "Components.EventHandler",
        "Name": "onpause",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpause",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpause"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1485465296,
        "Kind": "Components.EventHandler",
        "Name": "onplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -578737839,
        "Kind": "Components.EventHandler",
        "Name": "onplaying",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplaying",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplaying"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -832587639,
        "Kind": "Components.EventHandler",
        "Name": "onratechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onratechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onratechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 663762885,
        "Kind": "Components.EventHandler",
        "Name": "onseeked",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeked"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1735153146,
        "Kind": "Components.EventHandler",
        "Name": "onseeking",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeking",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeking"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 813114365,
        "Kind": "Components.EventHandler",
        "Name": "onstalled",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstalled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstalled"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 609086609,
        "Kind": "Components.EventHandler",
        "Name": "onstop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 26964004,
        "Kind": "Components.EventHandler",
        "Name": "onsuspend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsuspend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsuspend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -422855907,
        "Kind": "Components.EventHandler",
        "Name": "ontimeupdate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeupdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeupdate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1744095170,
        "Kind": "Components.EventHandler",
        "Name": "onvolumechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onvolumechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onvolumechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -56405318,
        "Kind": "Components.EventHandler",
        "Name": "onwaiting",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwaiting",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwaiting"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1959424322,
        "Kind": "Components.EventHandler",
        "Name": "onloadstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -28315602,
        "Kind": "Components.EventHandler",
        "Name": "ontimeout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1282294572,
        "Kind": "Components.EventHandler",
        "Name": "onabort",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onabort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onabort"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -891005942,
        "Kind": "Components.EventHandler",
        "Name": "onload",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onload",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onload"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1707393130,
        "Kind": "Components.EventHandler",
        "Name": "onloadend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -934267382,
        "Kind": "Components.EventHandler",
        "Name": "onprogress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onprogress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onprogress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -934519236,
        "Kind": "Components.EventHandler",
        "Name": "onerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
            "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1737838402,
        "Kind": "Components.EventHandler",
        "Name": "onactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1635416970,
        "Kind": "Components.EventHandler",
        "Name": "onbeforeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1179262426,
        "Kind": "Components.EventHandler",
        "Name": "onbeforedeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforedeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforedeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 237206110,
        "Kind": "Components.EventHandler",
        "Name": "ondeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1606097287,
        "Kind": "Components.EventHandler",
        "Name": "onended",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onended",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onended"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1677374304,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1981472265,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 757970962,
        "Kind": "Components.EventHandler",
        "Name": "onloadeddata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadeddata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadeddata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1117856510,
        "Kind": "Components.EventHandler",
        "Name": "onloadedmetadata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadedmetadata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadedmetadata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1548677056,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1906416832,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1843433762,
        "Kind": "Components.EventHandler",
        "Name": "onreadystatechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreadystatechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreadystatechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -620130818,
        "Kind": "Components.EventHandler",
        "Name": "onscroll",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onscroll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onscroll"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -2037776062,
        "Kind": "Components.EventHandler",
        "Name": "ontoggle",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontoggle",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontoggle"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1114902453,
        "Kind": "Components.EventHandler",
        "Name": "oncancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncancel' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncancel' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1835415968,
        "Kind": "Components.EventHandler",
        "Name": "onclose",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onclose' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclose",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclose:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onclose",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onclose' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onclose"
            },
            "BoundAttributeParameters": [
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onclose' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNameIdentifier": "EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -2029241984,
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@attributes",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes",
          "Components.IsSpecialKind": "Components.Splat",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -131344288,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@bind-",
                "NameComparison": 1,
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-...",
            "TypeName": "System.Collections.Generic.Dictionary<string, object>",
            "IndexerNamePrefix": "@bind-",
            "IndexerTypeName": "System.Object",
            "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Bind",
          "Common.TypeNameIdentifier": "Bind",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Components.Bind.Fallback": "True",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -484968065,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": null,
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1965070908,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": null,
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1290850456,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_checked"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_checked"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-checked",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_checked"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": null,
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.TypeAttribute": "checkbox",
          "Components.Bind.ValueAttribute": "checked",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1285838250,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": null,
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.TypeAttribute": "text",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1435572990,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": null,
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "number",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -805346411,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": null,
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "number",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1387612840,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "date",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 919760311,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "date",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -67731446,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1541254399,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 341190346,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "month",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -2124091989,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "month",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 603271798,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "time",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 2122097068,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.TypeAttribute": "time",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 207211044,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": null,
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -132679491,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNameIdentifier": "BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.Format": null,
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.ValueAttribute": "value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1315386574,
        "Kind": "Components.Bind",
        "Name": "TBAnalisisFinanciero.Client.Components.PdfLoader",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "Documentation": "Binds the provided expression to the 'FileIsSave' property and a change event delegate to the 'FileIsSaveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PdfLoader",
            "Attributes": [
              {
                "Name": "@bind-FileIsSave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "PdfLoader",
            "Attributes": [
              {
                "Name": "@bind-FileIsSave:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-FileIsSave:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-FileIsSave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'FileIsSave' property and a change event delegate to the 'FileIsSaveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "FileIsSave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.PdfLoader",
          "Common.TypeNameIdentifier": "PdfLoader",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components",
          "Components.Bind.ChangeAttribute": "FileIsSaveChanged",
          "Components.Bind.ValueAttribute": "FileIsSave",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1787570429,
        "Kind": "Components.Bind",
        "Name": "TBAnalisisFinanciero.Client.Components.PdfLoader",
        "AssemblyName": "TBAnalisisFinanciero.Client",
        "Documentation": "Binds the provided expression to the 'FileIsSave' property and a change event delegate to the 'FileIsSaveChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TBAnalisisFinanciero.Client.Components.PdfLoader",
            "Attributes": [
              {
                "Name": "@bind-FileIsSave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "TBAnalisisFinanciero.Client.Components.PdfLoader",
            "Attributes": [
              {
                "Name": "@bind-FileIsSave:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-FileIsSave:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-FileIsSave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'FileIsSave' property and a change event delegate to the 'FileIsSaveChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "FileIsSave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "TBAnalisisFinanciero.Client.Components.PdfLoader",
          "Common.TypeNameIdentifier": "PdfLoader",
          "Common.TypeNamespace": "TBAnalisisFinanciero.Client.Components",
          "Components.Bind.ChangeAttribute": "FileIsSaveChanged",
          "Components.Bind.ValueAttribute": "FileIsSave",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1716614130,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNameIdentifier": "InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1321802654,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNameIdentifier": "InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 734592977,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNameIdentifier": "InputDate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1685146108,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNameIdentifier": "InputDate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -2101404383,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNameIdentifier": "InputNumber",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 313904296,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNameIdentifier": "InputNumber",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1218757601,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1407532541,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 922423271,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNameIdentifier": "InputSelect",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1592340283,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNameIdentifier": "InputSelect",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -871772710,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNameIdentifier": "InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1556667739,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNameIdentifier": "InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1156399171,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNameIdentifier": "InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 1948269821,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNameIdentifier": "InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Components.Bind.ValueAttribute": "Value",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -1960512420,
        "Kind": "Components.Bind",
        "Name": "CEBlazorBulma.Components.Navegador.MainBar",
        "AssemblyName": "CEBlazorBulma",
        "Documentation": "Binds the provided expression to the 'ShowMenuClass' property and a change event delegate to the 'ShowMenuClassChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainBar",
            "Attributes": [
              {
                "Name": "@bind-ShowMenuClass",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "MainBar",
            "Attributes": [
              {
                "Name": "@bind-ShowMenuClass:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-ShowMenuClass:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ShowMenuClass",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'ShowMenuClass' property and a change event delegate to the 'ShowMenuClassChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ShowMenuClass"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.MainBar",
          "Common.TypeNameIdentifier": "MainBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.Bind.ChangeAttribute": "ShowMenuClassChanged",
          "Components.Bind.ValueAttribute": "ShowMenuClass",
          "Components.IsSpecialKind": "Components.Bind",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 557536714,
        "Kind": "Components.Bind",
        "Name": "CEBlazorBulma.Components.Navegador.MainBar",
        "AssemblyName": "CEBlazorBulma",
        "Documentation": "Binds the provided expression to the 'ShowMenuClass' property and a change event delegate to the 'ShowMenuClassChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CEBlazorBulma.Components.Navegador.MainBar",
            "Attributes": [
              {
                "Name": "@bind-ShowMenuClass",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "CEBlazorBulma.Components.Navegador.MainBar",
            "Attributes": [
              {
                "Name": "@bind-ShowMenuClass:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-ShowMenuClass:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-ShowMenuClass",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'ShowMenuClass' property and a change event delegate to the 'ShowMenuClassChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ShowMenuClass"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Common.TypeName": "CEBlazorBulma.Components.Navegador.MainBar",
          "Common.TypeNameIdentifier": "MainBar",
          "Common.TypeNamespace": "CEBlazorBulma.Components.Navegador",
          "Components.Bind.ChangeAttribute": "ShowMenuClassChanged",
          "Components.Bind.ValueAttribute": "ShowMenuClass",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": 804349844,
        "Kind": "Components.Ref",
        "Name": "Ref",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Populates the specified field or property with a reference to the element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ref",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Ref",
            "Name": "@ref",
            "TypeName": "System.Object",
            "Documentation": "Populates the specified field or property with a reference to the element or component.",
            "Metadata": {
              "Common.PropertyName": "Ref",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Ref",
          "Components.IsSpecialKind": "Components.Ref",
          "Runtime.Name": "Components.None"
        }
      },
      {
        "HashCode": -24513097,
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@key",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key",
          "Components.IsSpecialKind": "Components.Key",
          "Runtime.Name": "Components.None"
        }
      }
    ],
    "CSharpLanguageVersion": 1200
  },
  "RootNamespace": "TBAnalisisFinanciero.Client",
  "Documents": [
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Pages/Authentication/Login.razor",
      "TargetPath": "Pages\\Authentication\\Login.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Components/MostrarGraficas.razor",
      "TargetPath": "Components\\MostrarGraficas.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Components/Shared/RedirectToLogin.razor",
      "TargetPath": "Components\\Shared\\RedirectToLogin.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Components/Shared/PageContent.razor",
      "TargetPath": "Components\\Shared\\PageContent.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Pages/Inicio.razor",
      "TargetPath": "Pages\\Inicio.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Layout/MainLayout.razor",
      "TargetPath": "Layout\\MainLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Pages/Authentication/FetchData.razor",
      "TargetPath": "Pages\\Authentication\\FetchData.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Components/PdfLoader.razor",
      "TargetPath": "Components\\PdfLoader.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "/home/moruz/Documents/Blazor/TBAnalisisFinancieroApp/Client/Components/Shared/LoginDisplay.razor",
      "TargetPath": "Components\\Shared\\LoginDisplay.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.3"
}