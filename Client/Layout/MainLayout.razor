@inherits LayoutComponentBase

@using Blazored.LocalStorage;
@using System.Security.Claims

@inject CEBlazorBulma.Services.IYamlService yamlService
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation
@inject IConfiguration Configuration


<AuthorizeView Roles="UserNoMFA">    

   <Authorized>
      <MFALogicComponent/>
    </Authorized>
    <NotAuthorized>
      <div class=@globalTheme>
         <CascadingValue Value=@OnGlobalThemeChange>
            @if (navbarContent is not null)
            {
               <CEBlazorBulma.Components.NavBar NavBarContent=@navbarContent  WithThemeBar=@false>
                  <LoginArea>
                     <LoginDisplay/>
                  </LoginArea>
               </CEBlazorBulma.Components.NavBar>
            }

            @Body
         
         </CascadingValue>
      </div>
    </NotAuthorized>
</AuthorizeView>


@code{
   private Action<string>? OnGlobalThemeChange;
   private string globalTheme = "";
   private CEBlazorBulma.Models.NavBarModel? navbarContent;
   protected override async Task OnInitializedAsync()
   {
      var uri = new Uri(Navigation.Uri);
      var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);
		var token = queryParams["token"];
		if(token != null)
		{
			// Hay que checar antes de borrar, suelte un error intentar eliminar un elemento que no existe
			if(!(await LocalStorage.ContainKeyAsync("o8yo82q43rtbuiibeWQAFY8GFWEIGUO7G8FLKBJ"))){
				await LocalStorage.RemoveItemAsync("o8yo82q43rtbuiibeWQAFY8GFWEIGUO7G8FLKBJ");
			}
			await LocalStorage.SetItemAsync("o8yo82q43rtbuiibeWQAFY8GFWEIGUO7G8FLKBJ", token);
			await AuthStateProvider.GetAuthenticationStateAsync();
		}

      // Deserializar contenido del archivo YAML
      navbarContent = await yamlService
         .DeserializeFromFile<CEBlazorBulma.Models.NavBarModel>(Configuration["NavBarSettings:NavBarYAML"] ?? "");
      globalTheme = navbarContent?.Mainbar?.DefaultTheme ?? "";
      OnGlobalThemeChange = UpdateGlobalTheme;
   }
   public void UpdateGlobalTheme(string newTheme)
   {
      if (globalTheme != newTheme)
      {
         globalTheme = newTheme;
         StateHasChanged();
      }
   }
}